import { SettingOutlined } from '@ant-design/icons';
import React, { useState } from 'react';
import { Collapse, Select, ConfigProvider, theme, Card,  } from 'antd';
import ExampleTrajDrawer from './components/intro_components/ExampleStrucPDBDrawer.jsx'
import examplepdbimg from './assets/images/guide/example_traj.png'
import domainimg from './assets/images/guide/example_traj.png'

import v1 from './assets/images/guide/vmd1-2.png'
import v2 from './assets/images/guide/vmd3-4-5.png'
import v3 from './assets/images/guide/vmd6-7.png'
import v4 from './assets/images/guide/vmd8-9-10.png'
import v5 from './assets/images/guide/vmd11-12.png'
import v6 from './assets/images/guide/vmd13.png'
import v7 from './assets/images/guide/vmd14.png'
import submit_page from './assets/images/guide/submit_page.png'
import result_threshold from "./assets/images/submit/result_threshold.png"
import result_domain from "./assets/images/submit/result_domain.png"
import result_allostery from "./assets/images/submit/result_allostery.png"
import result_nri_res from "./assets/images/guide/result_nri_res.png"
import result_nri_domain from "./assets/images/guide/result_nri_domain.png"
import result_nri_path from "./assets/images/guide/result_nri_path.png"

import probability_sampling from "./assets/images/submit/probability_sampling.png"
import numerical_sampling from "./assets/images/submit/numerical_sampling.png"
import domain_sampling from "./assets/images/submit/domain_sampling.png"
import check_job from "./assets/images/guide/check_job.png"

const text_font_color = "rgba(17, 34, 100)"
const text_font = { fontSize:"2vh", fontWeight:"bold", color:"balck"}

const Prerocess = 

  <div>
    <div>At present, NRIMD supports trajectories generated by mainstream molecular dynamics software such as Amber, Gromacs, Namd, etc., 
         but user need to convert it to PDB format in advance (if the file size is too large, it can be compressed to zip format).
         The PDB text format are supported as below: 
         <div><img src={examplepdbimg} style={{width:"60%",border:"1px solid black",marginTop:"0.5vh", marginBottom:"0.5vh"}}></img></div>
         Compared with the traditional protein structure PDB, the trajectory PDB format required by NRIMD is simpler, 
         which is composed of the structure of protein C alpha atoms in successive frames.
         Each frame of the PDB requires a beginning like "MODEL   &lt;frame serial&gt;", 
         a body of C alpha atoms information and an "ENDMDL" end.
         For the acquisition of the required PDB format by NRIMD, we provide 3 methods for user to generate it in local machine.
    </div>
    <ul>
      <li>1.1 Built-in commands of MD software
        <div>The method 1 is using built-in commands of MD software like Amber and Gromacs:</div>
          <ul>
            <li><div style={{fontWeight:'bold'}}>For Amber:</div>
            <div>With AMBER output trajectory "yourtraj.dcd" and topology "yourtop.prmtop", user can use AMBER built-in commands below:</div>
              <div style={{backgroundColor:"black",color:"white", paddingLeft:"1%", width:"60%"}}>
                <div>$ cpptraj</div>
                <div>&gt;parm yourtop.prmtop </div>
                <div>&gt;trajin yourtraj.dcd 1 -1 1 # you can set inteval here</div>
                <div>&gt;strip !@CA</div>
                <div>&gt;trajout ca_traj.pdb noter</div>
                <div>&gt;run</div>
                <div>&gt;quit</div>
              </div>
            <div>These commands will generate desired C-Alpha skeleton <span style={{color:"green"}}>ca_traj.pdb</span> as the NRIMD input.</div>
            </li>
            <li><div style={{fontWeight:'bold'}}>For Gromacs:</div>
              <div >With GROMACS output trajectory <span style={{color:"#6495ED"}}>yourtraj.xtc</span> and topology <span style={{color:"#6495ED"}}>yourtraj.tpr</span>, please input Gromacs built-in commands below:</div>
              <div style={{backgroundColor:"black",color:"white", paddingLeft:"1%", width:"60%"}}>
              <div>$ gmx trjconv -f  <span style={{color:"#6495ED"}}>yourtraj.xtc</span> -s <span style={{color:"#6495ED"}}>yourtraj.xtc</span> -o <span style={{color:"green"}}>ca_traj.pdb</span></div>
              </div>
              <div>The command line will generate the following to let you select a group:</div>
              <div style={{backgroundColor:"black",color:"white", paddingLeft:"1%", width:"60%"}} >
                      Select group for output<br/>
                      Group     0 (         System) has xxxxx elements<br/>
                      Group     1 (        Protein) has xxxxx elements<br/>
                      Group     2 (      Protein-H) has  xxxx elements<br/>
                      Group     3 (        C-alpha) has   xxx elements<br/>
                      Group     4 (       Backbone) has  xxxx elements<br/>
                      Group     5 (      MainChain) has  xxxx elements<br/>
                      Group     6 (   MainChain+Cb) has  xxxx elements<br/>
                      Group     7 (    MainChain+H) has  xxxx elements<br/>
                      Group     8 (      SideChain) has  xxxx elements<br/>
                      Group     9 (    SideChain-H) has  xxxx elements<br/>
                      Group    10 (    Prot-Masses) has xxxxx elements<br/>
                      Group    11 (    non-Protein) has xxxxx elements<br/>
                      Group    12 (          Other) has    xx elements<br/>
                      Group    13 (            UNK) has    xx elements<br/>
                      Group    14 (          Water) has xxxxx elements<br/>
                      Group    15 (            SOL) has xxxxx elements<br/>
                      Group    16 (      non-Water) has xxxxx elements<br/>
                      Group    17 ( Water_and_ions) has xxxxx elements<br/>
                      Select a group: <span style={{backGroundColor:'white',color:"white"}}></span>
              </div>
              <div>Then it will notify you should select a group, type 3 to select Group 3 ( C-alpha ): </div>
              <div style={{backgroundColor:"black",color:"white", paddingLeft:"1%", width:"60%"}}>Select a group: 3</div>
              <div>These commands will generate desired C-Alpha skeleton <span style={{color:"green"}}>ca_traj.pdb</span> as the NRIMD input.</div>
            </li>
            <li><div style={{fontWeight:'bold'}}>For Namd:</div>
              <div>NAMD uses the popular molecular graphics program VMD for simulation setup and trajectory analysis, please refer to VMD commands in the next tab. </div>
            </li>
          </ul>
      </li>
      <li>1.2 VMD software
        <div>The VMD software can get <a href="https://www.ks.uiuc.edu/Research/vmd/">here</a>, after download and install well, please follow the steps below:</div>
          <div>
          <ul>
            <li>
              <div>First upload your trajecory file:</div>
              <img src={v1} style={{border:'1px solid #000', width:"40%", display:"block"}}></img>
              <img src={v2} style={{border:'1px solid #000', width:"40%", display:"block"}}></img>
            </li>
            <li>
              <div>Next upload your topology file: </div>
              <img src={v3} style={{border:'1px solid #000', width:"40%", display:"block"}}></img>
              <img src={v4} style={{border:'1px solid #000', width:"40%", display:"block"}}></img>
            </li>
            <li>
              <div>Then open TK console:</div>
              <img src={v5} style={{border:'1px solid #000', width:"40%", display:"block"}}></img>
              <img src={v6} style={{border:'1px solid #000', width:"40%", display:"block"}}/>
            </li>
            <li>
              <div>Input commands below (you can copy and paste):</div>
              <div style={{backgroundColor:"black",color:"white", paddingLeft:"1%", width:"60%"}}>
                set fp [open "ca_traj.pdb" w+]<br/>
                set n [molinfo 0 get numframes]<br/>
                for &#123; set i 0 &#125; &#123; &#36;i &lt; &#36;n &#125; &#123; incr i &#125; &#123;<br/>
                &emsp;&emsp;set cas [atomselect top "name CA" frame $i]<br/>
                &emsp;&emsp;$cas writepdb ./$i.pdb<br/>
                &emsp;&emsp;set pdbinfo [open $i.pdb r]<br/>
                &emsp;&emsp;set str [read $pdbinfo]<br/>
                &emsp;&emsp;close $pdbinfo<br/>
                &emsp;&emsp;file delete $i.pdb<br/>
                &emsp;&emsp;set noX_str [string map &#123;X ""&#125; $str ]<br/>
                &emsp;&emsp;set noXelb_str [string trimright $noX_str "\n"]<br/>
                &emsp;&emsp;set CRYSTindex [string first "CRYST" $noXelb_str ]<br/>
                &emsp;&emsp;set lbindex [string first "\n" $noXelb_str ]<br/>
                &emsp;&emsp;set framepdb [string replace $noXelb_str $CRYSTindex $lbindex ""]<br/>
                &emsp;&emsp;set frameindex  [expr $i + 1] <br/>
                &emsp;&emsp;puts $fp "MODEL $frameindex"<br/>
                &emsp;&emsp;puts $fp $framepdb<br/>
                &#125;<br/>
                close $fp<br/>
              </div>
            </li>
            <li>
              <div>These commands will generate desired C-Alpha skeleton <span style={{color:"green"}}>ca_traj.pdb</span> as the NRIMD input in your corresponding VMD folder.</div>
              <img src={v7} style={{border:'1px solid #000', width:"30%"}}></img>
            </li>
          </ul>

      </div>
      </li>
      <li>1.3 Python Script
        <div>Please download python script <a href='/api/nrimd/download/download_python_script/'>here</a>, then change to work directory and input below:</div>
        <ul>
          <li>Amber:
            <div style={{backgroundColor:"black",color:"white", paddingLeft:"1%", width:"60%"}}>python main.py --topfile yourtop.prmtop --trajfile yourtraj.dcd -outputfile CA_traj.pdb</div>
          </li>
          <li>Gromacs:
            <div style={{backgroundColor:"black",color:"white", paddingLeft:"1%", width:"60%"}}>python main.py --topfile yourtop.tpr --trajfile yourtraj.xtc -outputfile CA_traj.pdb</div>
          </li>
        </ul>
        <div>This script will generate desired C-Alpha skeleton <span style={{color:"green"}}>ca_traj.pdb</span> as the NRIMD input.</div>
      </li>
    </ul>
    <div>When the trajecory with required format by NRIMD has been generated, new let's submit the job! Please see the next section</div>
  </div>


const SubmitGuide = 
  <div>
    <div>This section will introduce the detailed parameters for submitting NRIMD job.</div>
    <div>The submission page included 3 modules: basic paremeters of NRI, advanced parameters and other mainstream methods:</div>
    <img src={submit_page} style={{width:"60%", border:"1px solid gray"}}></img>
    <ConfigProvider theme={{components: { }}}>
    <ul>
      <li>2.1 Basic paremeters
        <div>
            <Card style={{width:"90%", marginBottom:"0.5vh", }}>
              <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Trajecotry:</div>
                <ul>
                  <li>definition: trajectory of protein Ca atoms from molecular dynamics</li>
                  <li>type: file (.pdb or .zip)</li>              
                  <li>required: true</li>
                  <li>notes:
                    <ul>
                      <li>(1) forced upload </li>
                      <li>(2) trajectory content format: protein dynamic trajectoyr, frame </li>
                      <li>(3) file type: pdb and their corresponding compressed zip format</li>
                      <li>(4) file size: should be less than 20 MB (so user can compress the MD trajectory when too big</li>
                      <li>(5) if number of protein residues &gt; 300, Sample Strategy is forced due to huge cost of GPU calculatetin</li>
                      <li>(6) we suggest the number of protein frames are between 1000 ~ 6000</li>
                    </ul>
                  </li>
                </ul>
            </Card>

            <Card style={{width:"90%", marginBottom:"0.5vh", }}>
              <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Sample Strategy:</div>
                <ul>
                  <li>definition: sample strategy</li>
                  <li>type: choice</li>              
                  <li>required:  forced only when protein residues &gt; 500</li>
                </ul>
            </Card>
            <Card style={{width:"90%", marginBottom:"0.5vh", }}>
              <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Numerical Sampling:</div>
              <img src={numerical_sampling} style={{width:"40%", display:"block", border:"1px solid gray"}}></img>
            </Card>
            <Card style={{width:"90%", marginBottom:"0.5vh", }}>
              <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Probability Sampling:</div>
              <img src={probability_sampling} style={{width:"40%", display:"block", border:"1px solid gray"}}></img>
            </Card>
            <Card style={{width:"90%", marginBottom:"0.5vh", }}>
              <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Domain Sampling:</div>
              <img src={domain_sampling} style={{width:"40%", display:"block", border:"1px solid gray"}}></img>
            </Card>

            <Card style={{width:"90%", marginBottom:"0.5vh", }}>
            <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Name:</div>
              <ul>
                  <li>definition: user defined job name</li>
                  <li>type: string</li>              
                  <li>required: optional</li>
                </ul>
            </Card>

            <Card style={{width:"90%", marginBottom:"0.5vh", }}>
              <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Email:</div>
              <ul>
                  <li>definition: user email</li>
                  <li>type: string</li>              
                  <li>required: optional</li>
                  <li>notes: when job is finished, we will notify you</li>
                </ul>
            </Card>

            <Card style={{width:"90%", marginBottom:"0.5vh", }}>
              <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Visualization Threshold:</div>
              <ul>
                  <li>definition: threshold for interaction visualization</li>
                  <li>type: float (0-1)</li>              
                  <li>required: optional (default 0.6)</li>
                  <li>notes:
                    
                    <li>if the inferred interaction between two residues is greater than the threshold, it will be shown in the Heatmap.</li>
                    <li>the purpose of the setting is to make key interactions more clearly visible in the result heatmap.</li>
                    <li>if user don't set it, we will use default value 0.5 to visualize.</li>
                    <li>in the following, the Visualization Threshold are set as 0.1 and 0.9 respectively:</li>
                    <img src={result_threshold} style={{width:"60%", display:"block", border:"1px solid gray"}}></img>
                    <li>it can be found that the greater the threshold setting, the more clearly the key role is demonstrated, but the interactions below the threshold is not shown.</li>
                    <li>it doesn't matter if you don't know how to set the right value, we also afford the setting in the result page, so user can modify the threshold value to get the desired heatmap.</li>
                  </li>
              </ul>
            </Card>
 
            <Card style={{width:"90%", marginBottom:"0.5vh", }}>
            <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Distance Threshold:</div>
              <ul>
                  <li>definition: threshold for calculating shortest distance</li>
                  <li>type: float </li>              
                  <li>required: optional (default 12)</li>
                  <li>notes:
                    <ul>
                    <li>when using Djisktra algorithm calculating shortest path  for the protein, if distance between 2 residues &lt; Distance Threshold, it will
                      ignore the residue.</li>
                    <li>if user don't set it, we will use default value 12 to visualize.</li>
                    <li>set as num-residues if it does not work.</li>
                    </ul>
                  </li>
              </ul>

            </Card>
            <Card style={{width:"90%", marginBottom:"0.5vh", }}>
            <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Set Domains:</div>
              <ul>
                  <li>definition: information of protein domains</li>
                  <li>type: list of string-integer-integer </li>              
                  <li>required: only using domain sampling, it's forced</li>
                  <li>notes:
                    <ul>
                    <li>when using Djisktra algorithm calculating shortest path  for the protein, if distance between 2 residues &lt; Distance Threshold, it will
                      ignore the residue.</li>
                    <li>in the following, we will show how to set domains:</li>
                    <img src={result_domain} style={{width:"60%", display:"block", border:"1px solid gray"}}></img>
                    <li>First we need kown the domain name and domain position in protein, and set them in corresponding area.</li>
                    <li>When job is finished, it will show domain-domain interaction plot in result.</li>
                    </ul>
                  </li>
              </ul>

            </Card> 
            <Card style={{width:"90%", marginBottom:"0.5vh", }}>
            <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Allosteric Path:</div>
              <ul>
                  <li>definition: start residue and end residue of allosteric path</li>
                  <li>type: integer-integer </li>              
                  <li>required: optional</li>
                  <li>notes:
                    <ul>
                    <li>in the following, it shows how and why to set a allosteric path:</li>
                    <img src={result_allostery} style={{width:"60%", display:"block", border:"1px solid gray"}}></img>
                    <li>We set 93 as start residue and 123 as end residue because 93 mutation site is allosteric site, residue 123 is active site.</li>
                    <li>When job is finished, it will show allosteric paths from 93 to 123 in result.</li>
                    </ul>
                  </li>
              </ul>

            </Card>         
        </div>
      </li>
      <li>2.2 advanced parameters
        <div>
          <Card style={{width:"90%", marginBottom:"0.5vh", }}>
          <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Epochs:</div>
            <ul>
                <li>definition: number of epochs to train</li>
                <li>type: integer </li>              
                <li>required: optional (default 200)</li>
            </ul>
          </Card>  
          <Card style={{width:"90%", marginBottom:"0.5vh", }}>
          <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>TimeStep Size:</div>
            <ul>
                <li>definition: The number of time steps per sample. Actually is 50</li>
                <li>type: integer </li>              
                <li>required: optional (default 50)</li>
            </ul>
          </Card>  
          <Card style={{width:"90%", marginBottom:"0.5vh", }}>
          <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Learning Rate:</div>
            <ul>
                <li>definition: Initial learning rate</li>
                <li>type: float </li>              
                <li>required: optional</li>
            </ul>
          </Card>  
          <Card style={{width:"90%", marginBottom:"0.5vh", }}>
          <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Learning Rate Decay:</div>
            <ul>
                <li>definition: After how epochs to decay LR by a factor of gamma</li>
                <li>type: integer </li>              
                <li>required: optional</li>
            </ul>
          </Card>  
          <Card style={{width:"90%", marginBottom:"0.5vh", }}>
          <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Gamma:</div>
            <ul>
                <li>definition: LR decay factor</li>
                <li>type: integer </li>              
                <li>required: optional</li>
            </ul>
          </Card>  
          <Card style={{width:"90%", marginBottom:"0.5vh", }}>
          <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Seed:</div>
            <ul>
                <li>definition: Random seed</li>
                <li>type: integer </li>              
                <li>required: optional</li>
            </ul>
          </Card>  
          <Card style={{width:"90%", marginBottom:"0.5vh", }}>
          <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Var:</div>
            <ul>
                <li>definition: Output variance</li>
                <li>type: integer </li>              
                <li>required: optional</li>
            </ul>
          </Card>  
          <Card style={{width:"90%", marginBottom:"0.5vh", }}>
          <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Decoder:</div>
            <ul>
                <li>definition: Type of decoder model (mlp or rnn)</li>
                <li>type: integer </li>              
                <li>required: optional</li>
            </ul>
          </Card>  
          <Card style={{width:"90%", marginBottom:"0.5vh", }}>
          <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Decoder Hidden:</div>
            <ul>
                <li>definition: Number of hidden units in decoder</li>
                <li>type: integer </li>              
                <li>required: optional</li>
            </ul>
          </Card> 
          <Card style={{width:"90%", marginBottom:"0.5vh", }}>
          <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Decoder Dropout:</div>
            <ul>
                <li>definition: Dropout rate (1 - keep probability) in decoder</li>
                <li>type: integer </li>              
                <li>required: optional</li>
            </ul>
          </Card> 
          <Card style={{width:"90%", marginBottom:"0.5vh", }}>
          <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Encoder:</div>
            <ul>
                <li>definition: Type of Eecoder model (mlp or rnn)</li>
                <li>type: integer </li>              
                <li>required: optional</li>
            </ul>
          </Card> 
          <Card style={{width:"90%", marginBottom:"0.5vh", }}>
          <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Encoder Hidden:</div>
            <ul>
                <li>definition: Number of hidden units in encoder</li>
                <li>type: integer </li>              
                <li>required: optional</li>
            </ul>
          </Card> 
          <Card style={{width:"90%", marginBottom:"0.5vh", }}>
          <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Encoder Dropout:</div>
            <ul>
                <li>definition: Dropout rate (1 - keep probability) in encoder</li>
                <li>type: integer </li>              
                <li>required: optional</li>
            </ul>
          </Card> 
        </div>
      </li>
      <li>2.3 other mainstream methods
        <ul>
          <li>2.3.1 Pertubation Response Scanning
            <div>
              We implemented PRS according to https://pubs.acs.org/doi/10.1021/acs.jpcb.7b11971
            </div>
            <Card style={{width:"90%", marginBottom:"0.5vh", }}>
            <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Number of pertubatio:</div>
              <ul>
                  <li>definition: number of anisotropic pertubations</li>
                  <li>type: integer </li>              
                  <li>required: optional (default 100)</li>
              </ul>
            </Card> 
            <Card style={{width:"90%", marginBottom:"0.5vh", }}>
            <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Hessian Method:</div>
              <ul>
                  <li>definition: the method to calculate hessian matrix of protein. Usually we can use Covariance to replace it, we provide Shringkage and MDTASK method to caclulate it.</li>
                  <li>type: choice </li>              
                  <li>required: optional (default 0)</li>
              </ul>
            </Card> 
            <Card style={{width:"90%", marginBottom:"0.5vh", }}>
            <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Distance Threshold:</div>
              <ul>
                  <li>definition: distance threshold to generate covariance matrix, if distance between two residues is greater than the threshold, we consider as a possible allosteric path fragment.</li>
                  <li>type: integer </li>              
                  <li>required: optional (default 10)</li>
              </ul>
            </Card> 
            <Card style={{width:"90%", marginBottom:"0.5vh", }}>
            <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Cosine Threshold</div>
              <ul>
                  <li>definition: cosine threshold of angle of two displacement of two residues, if the cosine value is greater than the threshold, two residues were considered as nodes of allosteric path.</li>
                  <li>type: float </li>              
                  <li>required: optional (default 0.5)</li>
              </ul>
            </Card> 
          </li>
          <li>2.3.2 Effective Harmonic Hessian
            <Card style={{width:"90%", marginBottom:"0.5vh", }}>
              <div>
              We implemented EHH according to  https://pubs.acs.org/doi/10.1021/acs.jctc.9b01149
              </div>
            <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Covariance Method:</div>
              <ul>
                  <li>definition: The method to generate the input covariance for hENM</li>
                  <li>type: choice </li>              
                  <li>required: optional (default 0)</li>
              </ul>
            </Card> 
            <Card style={{width:"90%", marginBottom:"0.5vh", }}>
            <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Max Iterations:</div>
              <ul>
                  <li>definition: max iterations of calculating harmonic hessian</li>
                  <li>type: integer </li>              
                  <li>required: optional (default 100)</li>
              </ul>
            </Card> 
            <Card style={{width:"90%", marginBottom:"0.5vh", }}>
            <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Alpha:</div>
              <ul>
                  <li>definition: coefficient for iterations</li>
                  <li>type: float </li>              
                  <li>required: optional (default 0.01)</li>
              </ul>
            </Card> 
            <Card style={{width:"90%", marginBottom:"0.5vh", }}>
            <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>kBT:</div>
              <ul>
                  <li>definition: energy coefficient</li>
                  <li>type: float </li>              
                  <li>required: optional (default 0.592)</li>
              </ul>
            </Card> 
            <Card style={{width:"90%", marginBottom:"0.5vh", }}>
            <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Threshold:</div>
              <ul>
                  <li>definition: Threshold for iterations</li>
                  <li>type: float </li>              
                  <li>required: optional (default 0.0001)</li>
              </ul>
            </Card> 
            <Card style={{width:"90%", marginBottom:"0.5vh", }}>
            <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Distance Cutoff:</div>
              <ul>
                  <li>definition: distance cutoff for two residues</li>
                  <li>type: float </li>              
                  <li>required: optional (default 5)</li>
              </ul>
            </Card> 
          </li>
          <li>2.3.3 Constraint Network Analysis 
            <div>
            We implemented CNA according to https://cpclab.uni-duesseldorf.de/cna/main.php
            </div>
            <Card style={{width:"90%", marginBottom:"0.5vh", }}>
            <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Step Size:</div>
              <ul>
                  <li>definition: sampling steps for all-atom trajecory</li>
                  <li>type: integer </li>              
                  <li>required: optional (default 50)</li>
              </ul>
            </Card> 
            <Card style={{width:"90%", marginBottom:"0.5vh", }}>
            <div style={{fontWeight:'bold', fontSize:"1.5vh"}}>Upload all-atoms trajectory:</div>
              <ul>
                  <li>definition: all-atoms trajectory path</li>
                  <li>type: string </li>              
                  <li>required: optional, only when CNA were choosed it's forced </li>
              </ul>
            </Card> 
          </li>
        </ul>
      </li>
    </ul>
    </ConfigProvider>
  </div>

const ResultGuide = 
  <div>
    <div>This section will explain the results of NRIMD job.</div>
    <div style={{fontWeight:"bolder"}}>3.1 Check Job Status</div>
    <ul>
      <li>Once the job has been submitted, users can get Job Id, and users can check the job status ( running or finished ).</li>
      <li> Users can can either bookmark the results as https://nrimd.luddy.iupui.edu/result/ + Job ID, or click the link in the emailbox if the email address is provided.</li>
      <li> As the deep learning based jobs take some time (~1 hour or longer, depends on the sequence length and the queue in the HPC). If the job is still running, the status of the job will show this:
      <img src={check_job} style={{width:"60%", display:"block", border:"1px solid gray"}}></img>
      </li>
      <li> The job status will fresh every 5 minutes, users can click the refresh button to fresh the job status.</li>
      <li> It will jump to the results page if the job is finished. </li>
    </ul>

    <div style={{fontWeight:"bolder"}}>3.2 Result Analysis</div>
    <div> Note: All finished jobs will be deleted automatically in 14 days.</div>
    <ul>
      <li> In the results genereated below, both rows and columns are residues of the input Carbon-Alpha skeleton, 
        this heatmap demonstrates the inferred interactions between these residues from the NRIMD model. 
        The color demonstrates the strength of the interaction. Dark color means strong interaction, light color means weak interaction. 
        Users can tune the parameter below to select customerized threshold.
      <div><img src={result_nri_res} style={{width:"60%", border:"1px solid gray"}}></img></div>
      </li>
      <li> Comparing to the heatmap on interactions between residues genereated above, 
        users can manually define the domains below to get the coarse grained heatmap between the domains.
      <div><img src={result_nri_domain} style={{width:"60%", border:"1px solid gray"}}></img></div>
      </li>
      <li>In this item, the user can obtain the paths from the allosteric source residue to the allosteric target residue, 
        and also can reset it and get the real-time result. 
      <div><img src={result_nri_path} style={{width:"60%", border:"1px solid gray"}}></img></div>
      </li>
    </ul>

  </div>


 


const Guide = () => {
  const { token } = theme.useToken();
  const panelStyle = {
    marginBottom: "0.5vh",
    background: token.colorFillAlter,
    borderRadius: token.borderRadiusLG,
    border: "1px solid gray",
  };
  const onChange = (key) => {
    console.log(key);
  };
  const items = [
    {
      key: '1',
      label: <div style={{fontWeight:"bolder"}}>1. Prerocess for trajectory</div>,
      children: Prerocess,
      style: panelStyle,
    },
    {
      key: '2',
      label: <div style={{fontWeight:"bolder"}}>2. Submit job</div>,
      children:  SubmitGuide,
      style: panelStyle,
    },
    {
      key: '3',
      label: <div style={{fontWeight:"bolder"}}>3. Result analysis</div>,
      children: ResultGuide,
      style: panelStyle,
    },
  ];
  return (
    <div style={{margin:"2vh 2%"}}>
      <div style={{...text_font,width:"100%",margin:"2vh 0"}}> Here we provided a detailed explanation of the process from the acquisition of inputs, the submission of jobs to the acquisition of results: </div>
      <ConfigProvider
        theme={{
          components: {
            Collapse: {
              contentBg:"red"
            },
          },
        }}
      >
          <Collapse defaultActiveKey={[]} onChange={onChange} expandIconPosition={"end"} items={items} ghost={false} bordered={false} style={{...text_font, fontWeight:"-moz-initial",fontSize:"1.8vh",}}/>
      </ConfigProvider>
    </div>
  );
};
export default Guide;
